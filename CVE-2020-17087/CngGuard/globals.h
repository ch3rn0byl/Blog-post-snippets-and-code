#pragma once
#include <ntddk.h>

UNICODE_STRING g_DeviceName = RTL_CONSTANT_STRING(L"\\Device\\CngGuard");
UNICODE_STRING g_SymbolicName = RTL_CONSTANT_STRING(L"\\??\\CngGuard");

UNICODE_STRING g_HijackedName = RTL_CONSTANT_STRING(L"\\Driver\\Cng");
PDRIVER_OBJECT g_HijackedDriver = NULL;

PVOID g_CfgAdtpFormatPropertyBlock = nullptr;

extern "C" void __detoured_function();

///
/// This function is not exported so a signature has to be made for to dynamically resolve it. 
/// I don't want to hardcode addresses because I hate doing static offsets. What am I? A caveman?
/// 
UINT8 CfgAdtpFormatPropertyBlockSignature[] =
{
	0x48, 0x8b, 0xc4,		// mov rax, rsp
	0x48, 0x89, 0x58, 0x08,	// mov qword ptr [rax+8],rbx
	0x48, 0x89, 0x68, 0x10, // mov qword ptr [rax+10h],rbp
	0x48, 0x89, 0x70, 0x18, // mov qword ptr [rax+18h],rsi
	0x48, 0x89, 0x78, 0x20, // mov qword ptr [rax+20h],rdi
	0x41, 0x56,				// push r14
	0x48, 0x83, 0xec, 0x20,	// sub rsp, 20h
	0x33, 0xdb,				// xor ebx, ebx
	0x0f, 0xb7, 0xea,		// movxz, ebp, dx
	0x49, 0x8b, 0xf0,		// mov rsi, r8
	0x4c, 0x8b, 0xf1,		// mov r14, rcx
	0x48, 0x85, 0xc9		// test rcx, rcx
};

UINT8 __stub_detour[] =
{
	0x48, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	// mov rax, address
	0xff, 0xd0,													// call rax
	0x90, 0x90, 0x90											// filler
};

